// Code generated by mockery v2.34.2. DO NOT EDIT.

package models

import (
	context "context"

	boil "github.com/volatiletech/sqlboiler/v4/boil"

	mock "github.com/stretchr/testify/mock"
)

// MockProductHook is an autogenerated mock type for the ProductHook type
type MockProductHook struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0, _a1, _a2
func (_m *MockProductHook) Execute(_a0 context.Context, _a1 boil.ContextExecutor, _a2 *Product) error {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, boil.ContextExecutor, *Product) error); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockProductHook creates a new instance of MockProductHook. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockProductHook(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockProductHook {
	mock := &MockProductHook{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
